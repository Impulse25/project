<?php
// check_post.php - –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏

require_once 'config/db.php';
require_once 'includes/auth.php';

requireRole('technician');
$user = getCurrentUser();

?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>–ü—Ä–æ–≤–µ—Ä–∫–∞ POST</title>
    <style>
        body { font-family: Arial; padding: 20px; max-width: 1200px; margin: 0 auto; background: #f5f5f5; }
        .section { background: white; padding: 20px; margin: 20px 0; border-radius: 5px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
        h2 { color: #2563eb; }
        .log-line { padding: 5px; margin: 5px 0; background: #f9f9f9; border-left: 3px solid #2563eb; padding-left: 10px; font-family: monospace; }
        .error { border-left-color: #dc2626; }
        .success { border-left-color: #16a34a; }
        button { background: #2563eb; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; margin: 5px; }
        button:hover { background: #1d4ed8; }
        .btn-clear { background: #dc2626; }
        .btn-clear:hover { background: #b91c1c; }
        pre { background: #1e1e1e; color: #d4d4d4; padding: 15px; border-radius: 5px; overflow-x: auto; }
    </style>
</head>
<body>
    <h1>üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ POST –¥–∞–Ω–Ω—ã—Ö</h1>
    
    <div class="section">
        <h2>üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h2>
        <p><strong>ID:</strong> <?php echo $user['id']; ?></p>
        <p><strong>–ò–º—è:</strong> <?php echo $user['full_name']; ?></p>
        <p><strong>–†–æ–ª—å:</strong> <?php echo $user['role']; ?></p>
    </div>
    
    <div class="section">
        <h2>üìù –õ–æ–≥ debug_technician.log</h2>
        <?php
        $logFile = 'debug_technician.log';
        if (file_exists($logFile)) {
            $content = file_get_contents($logFile);
            if (empty(trim($content))) {
                echo '<p>–õ–æ–≥ –ø—É—Å—Ç. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É" –≤ —Å–∏—Å—Ç–µ–º–µ.</p>';
            } else {
                $lines = explode("\n", $content);
                $lines = array_reverse(array_filter($lines));
                
                echo '<p><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π (—Å–≤–µ—Ä—Ö—É –Ω–æ–≤—ã–µ):</strong></p>';
                
                foreach (array_slice($lines, 0, 20) as $line) {
                    $class = 'log-line';
                    if (strpos($line, 'SUCCESS') !== false) {
                        $class .= ' success';
                    } elseif (strpos($line, 'FAIL') !== false) {
                        $class .= ' error';
                    }
                    echo '<div class="' . $class . '">' . htmlspecialchars($line) . '</div>';
                }
            }
        } else {
            echo '<p style="color: red;">–§–∞–π–ª debug_technician.log –Ω–µ –Ω–∞–π–¥–µ–Ω!</p>';
        }
        ?>
        <br>
        <a href="?clear=1"><button class="btn-clear">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥</button></a>
        <button onclick="location.reload()">üîÑ –û–±–Ω–æ–≤–∏—Ç—å</button>
    </div>
    
    <?php
    if (isset($_GET['clear'])) {
        file_put_contents('debug_technician.log', '');
        echo '<script>location.href="check_post.php";</script>';
    }
    ?>
    
    <div class="section">
        <h2>üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Ñ–æ—Ä–º–∞</h2>
        <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —á—Ç–æ –ø–æ–ø–∞–¥—ë—Ç –≤ –ª–æ–≥:</p>
        
        <?php
        $stmt = $pdo->query("SELECT * FROM requests WHERE status = 'new' ORDER BY id DESC LIMIT 1");
        $testReq = $stmt->fetch();
        
        if ($testReq):
        ?>
            <form method="POST" action="technician_dashboard.php">
                <input type="hidden" name="request_id" value="<?php echo $testReq['id']; ?>">
                <p><strong>–ó–∞—è–≤–∫–∞:</strong> #<?php echo $testReq['id']; ?> - –ö–∞–±–∏–Ω–µ—Ç <?php echo $testReq['cabinet']; ?></p>
                <button type="submit" name="action" value="take_to_work">
                    ‚ñ∂Ô∏è –í–ó–Ø–¢–¨ –í –†–ê–ë–û–¢–£ (–¢–ï–°–¢)
                </button>
            </form>
            <p><small>–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ñ–æ—Ä–º—É –≤ technician_dashboard.php –∏ –∑–∞–ø–∏—à–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –ª–æ–≥</small></p>
        <?php else: ?>
            <p>–ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∞</p>
        <?php endif; ?>
    </div>
    
    <div class="section">
        <h2>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h2>
        <ol>
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –æ–¥–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ</li>
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ technician_dashboard.php –≤ –¥—Ä—É–≥–æ–π –≤–∫–ª–∞–¥–∫–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É" –≤ –ø–∞–Ω–µ–ª–∏</li>
            <li>–í–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å"</li>
            <li>–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —á—Ç–æ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å –≤ –ª–æ–≥</li>
        </ol>
        
        <h3>–ß—Ç–æ –∏—Å–∫–∞—Ç—å –≤ –ª–æ–≥–µ:</h3>
        <ul>
            <li><strong>POST: {"request_id":"...","action":"take_to_work"}</strong> - –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ</li>
            <li><strong>SUCCESS</strong> - UPDATE –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ</li>
            <li><strong>FAIL</strong> - –æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</li>
        </ul>
        
        <h3>–ï—Å–ª–∏ –ª–æ–≥ –ø—É—Å—Ç:</h3>
        <p style="color: red;">–ó–Ω–∞—á–∏—Ç POST –∑–∞–ø—Ä–æ—Å –≤–æ–æ–±—â–µ –ù–ï –¥–æ—Ö–æ–¥–∏—Ç –¥–æ —Å–µ—Ä–≤–µ—Ä–∞!</p>
        <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</p>
        <ul>
            <li>F12 ‚Üí Console - –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ JavaScript?</li>
            <li>F12 ‚Üí Network - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ª–∏ POST –∑–∞–ø—Ä–æ—Å?</li>
            <li>Ctrl+U ‚Üí –ï—Å—Ç—å –ª–∏ &lt;form method="POST"&gt;?</li>
        </ul>
    </div>
    
    <hr>
    <p><a href="technician_dashboard.php"><button>‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–∞–Ω–µ–ª–∏</button></a></p>
    
</body>
</html>
